name: Vulnerabilities Scan
on:
  workflow_dispatch:
  pull_request:
    paths:
      - .github/workflows/vulnerabilities_scan.yml
      - .snyk
      - Dockerfile
  push:
    branches:
      - master
  schedule:
    - cron: '0 2 * * *'

concurrency:
  group: scan-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

env:
  IMAGE_NAME: hazelcast/management-center:${{ github.sha }}

jobs:
  snyk:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ env.IMAGE_NAME }}
          load: true

      - name: Scan image by Snyk
        uses: snyk/actions/docker@master
        id: scan
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ env.IMAGE_NAME }}
          args: >-
            --file=Dockerfile
            --print-deps
            --exclude-base-image-vulns
            --exclude-app-vulns
            --policy-path=.snyk
            --fail-on=upgradable

      - name: Install snyk-to-html
        if: ${{ !cancelled() && steps.scan.outcome == 'failure' }}
        run: npm install snyk-to-html -g

      - name: Generate Snyk HTML report
        if: ${{ !cancelled() && steps.scan.outcome == 'failure' }}
        run: >-
          snyk-to-html
          --input ${{github.workspace}}/snyk.json
          --actionable-remediation
          --output ${{github.workspace}}/snyk-report.html

      - name: Upload Snyk report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() && steps.scan.outcome == 'failure' }}
        with:
          name: Snyk report
          path: ${{github.workspace}}/snyk-report.html

  trivy:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ env.IMAGE_NAME }}
          load: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.29.0
        id: scan
        with:
          image-ref: ${{ env.IMAGE_NAME }}
          format: 'template'
          template: "@/contrib/html.tpl"
          exit-code: '1'
          output: 'trivy-results.html'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() && steps.scan.outcome == 'failure' }}
        with:
          name: Trivy report
          path: ${{github.workspace}}/trivy-results.html
