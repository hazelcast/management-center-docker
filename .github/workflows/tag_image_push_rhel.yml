name: Build and publish Management Center RHEL image

on:
  workflow_dispatch:
  push:
    tags:
      - "v5.*"
      - "v6.*"

jobs:
  build:
    timeout-minutes: 10
    defaults:
      run:
        shell: bash
    env:
      SCAN_REGISTRY: "quay.io"
      TIMEOUT_IN_MINS: 120
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout hazelcast-docker repo
        uses: actions/checkout@v4
        with:
          repository: hazelcast/hazelcast-docker
          path: 'hazelcast-docker'

      - name: Set release version as environment variable
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV

      - uses: madhead/semver-utils@latest
        id: version
        with:
          version: ${{ env.RELEASE_VERSION }}

      - name: Print Release Version
        run: echo ${{ env.RELEASE_VERSION }}

      - name: Set scan registry secrets
        run: |
          echo "SCAN_REGISTRY_USER=${{ secrets[format('SCAN_REGISTRY_USER_V{0}', steps.version.outputs.major)] }}" >> $GITHUB_ENV
          echo "SCAN_REGISTRY_PASSWORD=${{ secrets[format('SCAN_REGISTRY_PASSWORD_V{0}', steps.version.outputs.major)] }}" >> $GITHUB_ENV
          echo "RHEL_PROJECT_ID=${{ secrets[format('RHEL_PROJECT_ID_V{0}', steps.version.outputs.major)] }}" >> $GITHUB_ENV

      - name: Set RHEL image as environment variable
        run: |
          echo "RHEL_IMAGE_TAG=${SCAN_REGISTRY}/redhat-isv-containers/${{ env.RHEL_PROJECT_ID }}:${RELEASE_VERSION}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ${{ env.SCAN_REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.SCAN_REGISTRY }}
          username: ${{ env.SCAN_REGISTRY_USER }}
          password: ${{ env.SCAN_REGISTRY_PASSWORD }}

      - name: Build and push docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/s390x
          tags: ${{ env.RHEL_IMAGE_TAG }}
          push: true
          provenance: false

      - name: Install preflight tool
        run: |
          PREFLIGHT_VERSION=$(curl -s https://api.github.com/repos/redhat-openshift-ecosystem/openshift-preflight/releases/latest | grep 'tag_name' | cut -d\" -f4)
          wget https://github.com/redhat-openshift-ecosystem/openshift-preflight/releases/download/${PREFLIGHT_VERSION}/preflight-linux-amd64
          chmod +x preflight-linux-amd64

      - name: Run preflight scan
        run: >-
          ./preflight-linux-amd64 check container ${{ env.RHEL_IMAGE_TAG }}
          --pyxis-api-token=${{ secrets.RHEL_API_KEY }}
          --certification-project-id=${{ env.RHEL_PROJECT_ID }}
          --docker-config=$HOME/.docker/config.json
          --submit

      - name: Wait for scan to complete
        working-directory: hazelcast-docker
        run: |
          source .github/scripts/publish-rhel.sh
          
          wait_for_container_scan "${{ env.RHEL_PROJECT_ID }}" "${{ env.RELEASE_VERSION }}" "${{ secrets.RHEL_API_KEY }}" "${{ env.TIMEOUT_IN_MINS }}"

      - name: Publish the Management Center image
        working-directory: hazelcast-docker
        run: |
          source .github/scripts/publish-rhel.sh

          publish_the_image "${{ env.RHEL_PROJECT_ID }}" "${{ env.RELEASE_VERSION }}" "${{ secrets.RHEL_API_KEY }}"
          wait_for_container_publish "${{ env.RHEL_PROJECT_ID }}" "${{ env.RELEASE_VERSION }}" "${{ secrets.RHEL_API_KEY }}" "${{ env.TIMEOUT_IN_MINS }}"
