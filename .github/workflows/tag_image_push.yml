name: Publish Management Center released version image

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV

      - name: Print Release Version
        run: echo ${{ env.RELEASE_VERSION }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0
        with:
          version: v0.8.2

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Compute tags
        run: |
          CURRENT_TAG=${GITHUB_REF:10}
          TAGS="--tag hazelcast/management-center:${{ env.RELEASE_VERSION }}"

          FILTERED_TAGS=$(git tag --list "v*" | grep -E -v '*BETA*' )
          LATEST_TAG=$((IFS=$'\n' && echo "${FILTERED_TAGS[*]}") | sort | tail -n 1)
          if [[ "$LATEST_TAG" = "${CURRENT_TAG}" ]]; then
            TAGS="${TAGS} --tag hazelcast/management-center:latest"
            echo "PUSH_LATEST=yes" >> $GITHUB_ENV
          fi

          MINOR_TAG=${CURRENT_TAG:0:4}
          FILTERED_TAGS_IN_MINOR_LINE=$(git tag --list "${MINOR_TAG}*" | grep -E -v '*BETA*' )
          LATEST_TAG_IN_MINOR_LINE=$((IFS=$'\n' && echo "${FILTERED_TAGS_IN_MINOR_LINE[*]}") | sort | tail -n 1)
          if [[ "$LATEST_TAG_IN_MINOR_LINE" = "${CURRENT_TAG}" ]]; then
            TAGS="${TAGS} --tag hazelcast/management-center:${MINOR_TAG:1}"
          fi
          echo "TAGS=${TAGS}" >> $GITHUB_ENV

      - name: Print docker image tags
        run: echo ${{ env.TAGS }}

      - name: Build & Push Management Center image
        run: |
          docker buildx build --push \
            ${TAGS} \
            --platform=linux/arm64,linux/amd64 .

      - name: Update Docker Hub Description of Management Center image
        if: env.PUSH_LATEST == 'yes'
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: hazelcast/management-center
          short-description: Hazelcast Management Center Docker Image
          readme-filepath: ./README.md
