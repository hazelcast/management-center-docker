name: Publish Management Center released version image

on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        required: true
        description: "Git tag to build"
      dry-run:
        type: boolean
        required: false
        description: "Build without push?"
        default: false
  workflow_call:
    inputs:
      tag:
        type: string
        required: true
        description: "Git tag to build"
      dry-run:
        type: boolean
        required: false
        description: "Build without push?"
        default: false
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_PASSWORD:
        required: true
  push:
    tags:
      - "v*"

jobs:
  build:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Set tag to rebuild
        run: |
          REF=${{ inputs.tag || github.ref_name }}
          echo "REF=$REF" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${REF:1}" >> $GITHUB_ENV
          echo "DRY_RUN=${{ inputs.dry-run || false }}" >> $GITHUB_ENV

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ env.REF }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Compute tags
        run: |
          TAGS="hazelcast/management-center:${{ env.RELEASE_VERSION }}"

          LATEST_TAG=$(git tag --list --sort=refname "v*" | grep -E -v 'v*BETA*' | tail -n 1)
          if [[ "$LATEST_TAG" = "${REF}" ]]; then
            TAGS="${TAGS},hazelcast/management-center:latest"
            echo "Latest tag added: ${TAGS}"
            echo "PUSH_LATEST=yes" >> $GITHUB_ENV
          fi

          MINOR_TAG=${REF:0:4}
          if [[ "$MINOR_TAG" != "${REF}" ]]; then
            LATEST_TAG_IN_MINOR_LINE=$(git tag --list --sort=refname "${MINOR_TAG}*" | grep -E -v 'v*BETA*' | tail -n 1)
            if [[ "$LATEST_TAG_IN_MINOR_LINE" = "${REF}" ]]; then
              TAGS="${TAGS},hazelcast/management-center:${MINOR_TAG:1}"
              echo "Latest tag in minor line added: ${TAGS}"
            fi
          fi
          echo "TAGS=${TAGS}" >> $GITHUB_ENV

      - name: Print docker image tags
        run: echo ${{ env.TAGS }}

      - name: Build and push docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/s390x
          tags: ${{ env.TAGS }}
          provenance: false
          push: ${{ !env.DRY_RUN }}

      - name: Update Docker Hub Description of Management Center image
        if: env.PUSH_LATEST == 'yes' && !env.DRY_RUN
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: hazelcast/management-center
          short-description: Hazelcast Management Center Docker Image
          readme-filepath: ./README.md
